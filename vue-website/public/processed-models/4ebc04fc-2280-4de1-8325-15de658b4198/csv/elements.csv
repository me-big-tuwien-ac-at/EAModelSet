"ID","Type","Name","Documentation","Specialization"
"4ebc04fc-2280-4de1-8325-15de658b4198","ArchimateModel","core-pipeline-design","https://github.com/untillpro/airs-design/commits/master",""
"id-33726952f34b42578b3b1c05b8e61066","Artifact","currentBranchName","",""
"id-43b9df63c6444fcc96c7f3b83d843a87","Artifact","flushInterval","",""
"id-6c523ba9d3f4490080c84474ce1f8605","Artifact","forks []interface{}","",""
"id-1f6218cc028e408987255c72d9fefba8","Artifact","Operators","",""
"id-b5fcd75747a145b48553067f8ce697c4","Artifact","Operators","",""
"id-fc405712303c426eba3909a898ea768f","Artifact","Type: Input Workpiece","",""
"id-29fcfb19deaa4a1191bbfcf38fecca78","Artifact","Type: Output Workpiece","",""
"id-fad98a779f204ee08c93a64c991ad4bd","Node","go IService.Run(ctx)","",""
"id-97f452485d484089bc5fd6174afef788","Node","go Puller: 1","",""
"id-5a30f623710440088d88fda78e762d1d","Node","go Puller: 2","",""
"id-acc1c893d61845cf8a8b91a448b2bda7","Path","ctxext","",""
"id-3e3fea2538fe42bd8a445e00c3bb54de","Path","ctxin","",""
"id-5287579b238b4a18841fd7bc2fd2e58b","Path","ctxout","",""
"id-c1e465d8e28248b48a78ba1122ff8f3d","Path","ctxout: last","",""
"id-848bc206cf54408f823056407f276e92","Path","stdin","",""
"id-019ebb50762a4894b313d74d19014242","Path","stdout","",""
"id-4aba6427e3644b66b79ffdd6031a6fe3","Path","stdout: last","",""
"id-050d3de613ab47b8ba1ac5489b759e4c","TechnologyEvent","All branches are OK","",""
"id-28c8fc1f4bf4476ba1230f1c102b537a","TechnologyEvent","All branches finished","",""
"id-e65faf40915d48ab97a9f6b5c17b0097","TechnologyEvent","ctxext.Err() != nil","",""
"id-53cf6a488f9d418b8a30ff636583636f","TechnologyEvent","ctxext.Err() != nil","",""
"id-28b1c308782c441c8236bda07e1cec60","TechnologyEvent","ctxext.Err() == nil","",""
"id-c602b1d1aab645cab498050c51067644","TechnologyEvent","ctxext.Err() == nil","",""
"id-d08ff67e9e4444fea3d134bfbf342b47","TechnologyEvent","ctxin.Err() != nil","",""
"id-9460ea4ffa034fcd8bb4ad77a2531652","TechnologyEvent","ctxin.Err() != nil","",""
"id-f4e9947202724866ad877f7e730477d4","TechnologyEvent","ctxin.Err() == nil","",""
"id-263fd9eea3134879925f4c3b5c64dec9","TechnologyEvent","End","",""
"id-b85929848eed4b26b9b0cbb9c1f2d4aa","TechnologyEvent","err != nil","",""
"id-0e6951a71ae648599f04f6cabbde2f7b","TechnologyEvent","err == nil","",""
"id-6ad13b46288a4574845534d06f20cf2c","TechnologyEvent","err is nil","",""
"id-a7c7c2780e9b42cab9781465fe409d88","TechnologyEvent","err is not nil","",""
"id-7b6a8028e9ea4f5b80252d0a4c706edc","TechnologyEvent","error","",""
"id-551c62f66153423ab679289a03f5cdaa","TechnologyEvent","Flush needed","",""
"id-d64ccb3c0d9d4da4b239b11e5596c1d4","TechnologyEvent","Has more items","",""
"id-5c2c3d394b7148ad99e9ddeb4194786b","TechnologyEvent","New item from stdout","",""
"id-48aef413d2bc4aa382361f9f60aa4cba","TechnologyEvent","New record","",""
"id-60d53c09357049f3bb598fa38d3e03a4","TechnologyEvent","No new record","",""
"id-0f56173e2bdc48adb4e99b9adc9a7c87","TechnologyEvent","Request is cancelled","",""
"id-dfb8c94002d34bce9afb91cd1a6ec2a9","TechnologyEvent","Some branches fail","",""
"id-eb97782cc52f465c91401674fd49b1f4","TechnologyEvent","Stdin closed","",""
"id-047f774f0d3249c3b55e4099a1592910","TechnologyEvent","Want to quit","",""
"id-8c38ac9377504399b8092be9e1809709","TechnologyEvent","Want to quit","",""
"id-7f201576e8ed4155bce47d1d443c91e8","TechnologyEvent","work","",""
"id-9d4fed6008754ac8b014161c3c2a7737","TechnologyEvent","work","",""
"id-098045a0bcdb498c8fd2f12422f7dc21","TechnologyEvent","Written to stdin","",""
"id-514f0d07e8cf4f578d584ada4df30ec3","TechnologyFunction","AsyncNOOP","No Operation",""
"id-e04f0b3de2ef4006af560168474f75af","TechnologyFunction","AsyncPipeline","",""
"id-4359e3f3c98948ba9572f001159fd241","TechnologyFunction","AsyncPuller","",""
"id-811e0b8652e94bd0be63b6727aaab984","TechnologyFunction","AsyncSwitchOperator","https://github.com/heeus/core-pipeline/blob/2491afe177ea55dd44094acc36a6babdfe58b903/switch-operator-impl.go#L11",""
"id-c6c917aa2fa24c00aff064bfa7b91d43","TechnologyFunction","branch","",""
"id-9135a39f5a794589b7593695299a7784","TechnologyFunction","branch","",""
"id-56afba02ff714acebbd3726ba07a311b","TechnologyFunction","Do()","",""
"id-3ebb4dc7a2fa49028557468032eea1ca","TechnologyFunction","ErrAborted","",""
"id-778efe69ca674c9a87990de7d204c46e","TechnologyFunction","error","",""
"id-89f7bfd15d12483db60e498a3f3250e5","TechnologyFunction","ForkOperator","",""
"id-4fe914851aea4b6b8a5eb39a57773a63","TechnologyFunction","IAsyncOperator","",""
"id-fb26d33f1d5b44bd915407e367acb67a","TechnologyFunction","IAsyncPipeline","",""
"id-a382f7b306274497a7652460ef2480f6","TechnologyFunction","ICatch","",""
"id-8a8dff8bc4804e52b607a230f20254e1","TechnologyFunction","IFork","fork(work, numberOfBranches) (forward IWorkPiece, forks",""
"id-b9feea47310749128396ed003774fd6e","TechnologyFunction","IOperator","",""
"id-361801e82e5e4ff8a7bc4f5129f4072a","TechnologyFunction","IOperator: 1","",""
"id-9bc5e190c4cb4e8faa7c6f07b8057177","TechnologyFunction","IOperator: 2","",""
"id-ad86071344b04a9883326570b35dafcb","TechnologyFunction","IOperator<Aggregate>","",""
"id-f66327a73b26473a9655df5f386282e0","TechnologyFunction","IOperator<AnalyzePartitions>","",""
"id-d98eab0db5f54efea53c84d403dcabc6","TechnologyFunction","IOperator<Enrichment>","",""
"id-e95a04814cfa4c1c9442796627002c8b","TechnologyFunction","IOperator<Filter2>","",""
"id-7c6254bd568e4c84a88570a23b7e3589","TechnologyFunction","IOperator<Filter>","",""
"id-ceb8409c706341168386c863049eee72","TechnologyFunction","IOperator<Invoke Func>","",""
"id-62ff0456dd704fffbc2705132fb8cafb","TechnologyFunction","IOperator<Order>","",""
"id-e1efa39a4e884deab7b1c1ee657966fb","TechnologyFunction","IOperator<Release Record>","",""
"id-883b6aa0e8af49f0b22d483743b95e69","TechnologyFunction","IOperator<Releaser>","",""
"id-f34dcb5b610a48e58c2d6d6bf7532a1e","TechnologyFunction","IOperator<Send to Bus>","Bus must handle backpressure issue (do not send more then client can read)",""
"id-376bb79540f74c3a87f08d35dd4c9fba","TechnologyFunction","IOperator<SyncProjections>","",""
"id-f8242bc337f343fab8d36b96e576bfbf","TechnologyFunction","IOperator<Validate Command>","",""
"id-4ae4c3b62a494424b3282fdcfe3c0163","TechnologyFunction","IOperator<Validate Event>","",""
"id-709a4da8fbec4386bad84bb48e3d1c24","TechnologyFunction","IOperator<Write Event to Log>","",""
"id-1c66906bd2944deeac90588b5ab85acd","TechnologyFunction","IService","",""
"id-933967fd21334c01a1229a08c01974fa","TechnologyFunction","IState","",""
"id-57340a79618f4997a172a98e7336c180","TechnologyFunction","IStorage","",""
"id-bfde79a48a9d4709980febcf70933fb8","TechnologyFunction","IStorages","",""
"id-50692ee038334ea081580219316fc0a5","TechnologyFunction","ISwitch switchLogic","type ISwitch interface {
 Switch(work IWorkpiece) (branch int, err error)
}",""
"id-4b71e494d2914009afac0350a7c23d9b","TechnologyFunction","ISyncOperator","type IOperator interface {

 // Must be called until queryState is nil (check err of course)
 Prepare(work interface{}) (queryState OpFuncQueryState, err error)

 // Must be the last call to operator
 Close()
}

type ISyncOperator interface {
 IOperator
 // If `err` is not nil then `work` is passed to the nearest `ICatch`
 DoSync(ctx context.Context, work interface{}, state IState) (err error)
}",""
"id-51327754030e4dc4b997d636092e8e16","TechnologyFunction","ISyncOperator: branch","",""
"id-e3a705b980a24d33b33d44071226cb7b","TechnologyFunction","IWorkpiece","",""
"id-e0bcf0aecfe348a7979c37096c07457b","TechnologyFunction","IWorkpiece.Release()","",""
"id-1987c94fc81e4602bc6e14d2010625f8","TechnologyFunction","NOOP","No Operation",""
"id-237f4b06ad8945d689fa6599251a51f2","TechnologyFunction","OnError(err error)","",""
"id-08eaaa21e6314886a5af90264049d519","TechnologyFunction","Pass Request Through","",""
"id-ebe4aa35d25047a3a8a4b9efd36cbc75","TechnologyFunction","Pick part if work","",""
"id-61cdda00143943e58f57950be1831701","TechnologyFunction","Pipeline","https://en.wikipedia.org/wiki/Chain_conveyor",""
"id-52a1955e2b774b6780a09cd8f6bdc62b","TechnologyFunction","Pipeline.Close()","https://en.wikipedia.org/wiki/Chain_conveyor",""
"id-98ffd4f07bd64a2f96c54620aaa151bb","TechnologyFunction","Pipeline.SendSync()/Pipeline.SendAsync()","https://en.wikipedia.org/wiki/Chain_conveyor",""
"id-c17665d7e5cb4817aadcc23d4fc2cc6d","TechnologyFunction","Projection Query Pipeline","",""
"id-28aecd5ac7d94080b461db070d9c69ba","TechnologyFunction","Serial Request Pipeline","",""
"id-f3be1ae136f14b01856fe94253787c24","TechnologyFunction","ServiceOperator","",""
"id-424b2e40130845289b4396b95cc2b401","TechnologyFunction","Stop Pipeline","",""
"id-c065de82b62a42fea6fe782adcf23dd5","TechnologyFunction","SwitchOperator","https://github.com/heeus/core-pipeline/blob/2491afe177ea55dd44094acc36a6babdfe58b903/switch-operator-impl.go#L11",""
"id-0f0c1c4fa3ae46699e391e5242ed5cd8","TechnologyFunction","SyncPipeline","",""
"id-de0bce9a0ed042f080d9c050981ef1eb","TechnologyFunction","SyncPipeline.Send()","",""
"id-41192179d95f4965800a396b3f66d5b9","TechnologyFunction","SyncPuller","",""
"id-5c52e382036148d2900b8dddd59bff3f","TechnologyFunction","Temp Pipeline","",""
"id-23b5fb16ec1547cba994e34c762b14c0","TechnologyFunction","Use original work","",""
"id-a45fcde84d814222aa8bf8b3eeb5ec41","TechnologyFunction","WiredOperator: 1","",""
"id-21c2274532784eb19c9cffa596301877","TechnologyFunction","WiredOperator: 2","",""
"id-630570d643e7451eb556c61998cd6b1e","TechnologyProcess","Build Async Pipeline","",""
"id-1d24328623624c66b8b348ecf81f4f7c","TechnologyProcess","Build Sync Pipeline","",""
"id-fe620687f1d842d4aab4f095ffe74153","TechnologyProcess","Build Temp Pipeline","",""
"id-36a644de81ff4235b5d62b27488ba409","TechnologyProcess","Call Close()","",""
"id-d7207647cb4449d3ae192d3c052baafa","TechnologyProcess","Call IOperator.Close()","",""
"id-eb48e19d033d4b0f8bb9d1c7af2c6649","TechnologyProcess","Call IOperator.Close()","",""
"id-099f5451a4ee441dbedb1284bacc80a8","TechnologyProcess","Call IOperator.Flush()","",""
"id-a504c1adcb02472db47dbae708c7be52","TechnologyProcess","Call IOperator.Flush()","",""
"id-22c5cc21295d445191edbd54fa6d7e5a","TechnologyProcess","Call Send()","",""
"id-7e20f8da107a45879fdb91900f4aa718","TechnologyProcess","Call TempPipeline.Close()","",""
"id-b0c1c2b3b5bc421b8b50f50d151e204e","TechnologyProcess","Call TempPipeline.Send()","",""
"id-dca1c2c8cd8a4b57b62e3975147c88a5","TechnologyProcess","Check ctxin.Err()","",""
"id-ef49e7210f514ec78baeed954cfd4559","TechnologyProcess","Check results","",""
"id-1aee849677854f8f80bf0732d21da1d9","TechnologyProcess","Close stdout","",""
"id-87a569300ce74a26b8de3fdfe7576ac3","TechnologyProcess","Close stdout","",""
"id-0e38801ce2ce4a0580744be4e1d4db6f","TechnologyProcess","Close()","",""
"id-d226a105b46542688fd8cb120eba5e51","TechnologyProcess","DoAsync()","",""
"id-a27fb3fea5334503a8f599034f5ba086","TechnologyProcess","DoSync()","",""
"id-b0152cdac9744a0d887e735557b03be3","TechnologyProcess","DoSync()","fork(numberOfBranches, ",""
"id-0275f055cbf8439e98a08ea3fed56ab0","TechnologyProcess","DoSync()","",""
"id-64e47dd2a1d5483c909d338fd74f3541","TechnologyProcess","ErrInBranches","",""
"id-73f004a40e6b49f687798331d57e5c0d","TechnologyProcess","Fork workpiece","fork(numberOfBranches, ",""
"id-86ab5d6cb0934b33ae80f766cd8316a6","TechnologyProcess","Has more items for pipe","",""
"id-99b6841983a74a85af1c483e3b3ef43b","TechnologyProcess","Parse Input","",""
"id-4b8b18a3bd674776a025d446d0e47051","TechnologyProcess","Pass results through","",""
"id-6ebfd557b17f4ed8974bd0daee8eeb16","TechnologyProcess","Prepare err","",""
"id-4add19a34e4842628fe304a679012f81","TechnologyProcess","Prepare()","",""
"id-c40c99d7e9e340e2b9c46f7826a72d0c","TechnologyProcess","Prepare()","",""
"id-9eaf1ee596bb4fce9d70f6ad0850d1c8","TechnologyProcess","Prepare() (copy)","",""
"id-eec2016c620b492ab9c8e1c274ffcea9","TechnologyProcess","Process outWork","",""
"id-539de7ff5c22445586f0529d88cce436","TechnologyProcess","range stdin","",""
"id-6f4f0dbbb2cf4f498945b80c3e2bdb9c","TechnologyProcess","Read commands from Bus ","",""
"id-1d8c0312e2314cb28d495fab948c9c28","TechnologyProcess","Read Projection partitions","",""
"id-94048e9a19f74422a7871eb34ce07b0c","TechnologyProcess","Read State","",""
"id-6a9d9956fe7443d6942276ef68c7df60","TechnologyProcess","Release() command","",""
"id-d5725116effb4e8ebc145a45d3d9a756","TechnologyProcess","Return nil, err","",""
"id-4de1b1cda31545af990212aef45121d8","TechnologyProcess","Return nil, nil","",""
"id-aa56bbc6aa5a4b70b4593b6553c8d383","TechnologyProcess","Return work, err","",""
"id-cf1d3b221ca741c69dc0ab38b9cf5c2c","TechnologyProcess","Return work, err","",""
"id-998c405385fe4be78599c1e8e9e188de","TechnologyProcess","Return wrapped ErrAborted","",""
"id-d7369a2a9735467e91c621c094d0f350","TechnologyProcess","Select","",""
"id-b395a7b3c41843658e4e95138ae3bcd4","TechnologyProcess","Select stdin/timer","",""
"id-6254669c763f4cbca15f1a8a3e906ea0","TechnologyProcess","Send","",""
"id-3a1cac208e4c4517bd1533ba1a886ba4","TechnologyProcess","Send to all branches","",""
"id-0baa8a61647447b1bf805f9dea338235","TechnologyProcess","Send work/error further","",""
"id-a963419bce3f4f5ab4bfcf321a9be7ba","TechnologyProcess","Switch()","type ISwitch interface {
 Switch(work IWorkpiece) (branchName string, err error)
}",""
"id-25e0a384539346f7b77579e880c03deb","TechnologyProcess","Switch() (copy)","type ISwitch interface {
 Switch(work IWorkpiece) (branchName string, err error)
}",""
"id-494fbaf3f3cb4d51bfdd161cda5808d4","TechnologyProcess","Wait and return","",""
"id-712d3e1a61424766bd58616487d7a0b7","Constraint","SyncPipeline must have only one workpiece  inside","Otherwise flush behaviour is undefined",""
"id-5b9c7bc517824d7f8b6cc16b66dde715","Constraint","Uniqiue StorageID","",""
"id-650fd24d80874c72aef94adf199b303d","Principle","AsyncPipeline operator may return nil","",""
"id-b61ed7f794814ba584cb47e07eb5fe0b","Principle","AsyncPipeline: no catch","That's by definition",""
"id-016f21ea8ea24f14b94406bfb362480a","Principle","AsyncPipeline: work does not come out, errs only","That's by definition",""
"id-7454ecc93a074e75a0dcaf8c3542ac04","Principle","AsyncPuller: check ctxin.Err() all the time","",""
"id-963a9077fa2242db8f7a01be335386db","Principle","AsyncPuller: if ctxin.Err() - stop processing stdin/flush","",""
"id-556f0101ff1747f4a51de4ef16d9a402","Principle","AsyncPuller: if operator returns any error - stop processing stdin/flush","",""
"id-cda8e9b6617e43db85a9c98344bca842","Principle","ForkOperator: no Prepare in branches","",""
"id-f6a5636533e942c3bacdfcd9eeed1b12","Principle","nil's are not passed through WiredOperators","",""
"id-156a355ca24b4456b712470e7dc1c94d","Principle","On critical errors pipeline must be disassembled immediately","PLog write is ok but Projections are not ok",""
"id-5233b3b8d21f4dd2a1247d50cb0fe47f","Principle","Pipeline uses single context (ctxext)","",""
"id-76cbb4e77cc1434f8223c37d43c7ce4d","Principle","SyncPipeline operator MUST NOT return anything DoSync()","",""
"id-b398ff6d3db84f139c8f223ab3c87851","Principle","SyncPipeline operators MUST NOT ask for flush","",""
"id-8a22adedcee74e7390f6e869372d6e77","Principle","SyncPipeline: one work in -> one item out","That's by definition",""
"id-a3ea51c35b5941bda12ad89b592cc86a","Requirement","Async Messaging Pipelines With Branches","",""
"id-204e494e6b704640b2e1f5ef484a9235","Requirement","Backpressure","",""
"id-dd487b5ba39742ebbce3c36ea33b01d8","Requirement","Big Data Processing","",""
"id-c093741297a8495296f1c9d72b2453f0","Requirement","Cancel","",""
"id-4e39d9b34af94dfeaee2571e251820d5","Requirement","Catch","",""
"id-3ee8df19a5e1471796ebc005ab353dc5","Requirement","Fast Sync/Async Projectors","",""
"id-6f338137d76440d7a76fb123b39c0ea8","Requirement","Greacefull Shutdown","",""
"id-991217f974624a6db6b5fdf4d634e9ac","Requirement","Pipeline as Operator","",""
"id-74a9783c06774b2a8826c06f774f94f3","Requirement","Projection Query","",""
"id-eff404135fae43cabcb5fd0f4c971719","Requirement","Pulling Wire","",""
"id-a15b4b56fbee4b9b93ea5e2ca972082d","Requirement","Serial Requests","",""
"id-96e9a4eea0c44880b1bf0f99f934b32e","Requirement","Switch","",""
"id-86ae85d4df4b497f98c9621ccd98219b","Requirement","Validation","",""
"id-9b8728a518674636b024e656d858a177","Requirement","Zero Allocation","",""
"id-0121cd3c98a340ad94caba1106d61b19","Grouping","AsyncPuller Requirements","",""