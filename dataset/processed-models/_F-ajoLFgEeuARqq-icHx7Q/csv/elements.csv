"ID","Type","Name","Documentation","Specialization"
"_F-ajoLFgEeuARqq-icHx7Q","ArchimateModel","1c-study-mobilebank","",""
"_F-juOrFgEeuARqq-icHx7Q","BusinessInterface","AuthenticationProviderInterface","",""
"_F-jtvLFgEeuARqq-icHx7Q","BusinessInterface","Decoder","<p>Функции:</p><ul> <li>decode(byte[]) -&gt; RequestAnswer</li></ul>",""
"_F-jturFgEeuARqq-icHx7Q","BusinessInterface","Encoder","<p>Функции:</p><ul> <li>encode(Request) -&gt; byte[]</li></ul>",""
"_F-jt0LFgEeuARqq-icHx7Q","BusinessInterface","Encoder","<p>Функции:</p><ul> <li>encode(Request) -&gt; byte[]</li></ul>",""
"_F-jtvrFgEeuARqq-icHx7Q","BusinessInterface","Interactor","<p>Функции:</p><ul> <li>send(byte[]). Послать запрос на backend</li> <li>receive() -&gt; byte[]. Принять данные от backend</li> <li>request(byte[]) -&gt; byte[]. Послать запрос и получить ответ от backend</li></ul><p>Реализации могут определять специальные функции (например, послать запрос на произвольный адрес).</p>",""
"_F-jtuLFgEeuARqq-icHx7Q","BusinessInterface","RequestTemplate","<p>Функции:</p><ul> <li>result() -&gt; Request. Получить результат конструирования запроса</li></ul><p>Каждая реализация самостоятельно определяет различные методы для конфигурирования.</p><p>Соответствует паттерну Builder/</p>",""
"_F-juGrFgEeuARqq-icHx7Q","BusinessObject","State","<p>Состояие пользовательского интерфейса в представлении приложения.</p>",""
"_F-juDrFgEeuARqq-icHx7Q","BusinessService","ActionManager","<p>Отслеживает те или иные Action в зависимости от текущего состояния. Получает оповещения о новых Action и соответствующим образом меняет DataSequence или обращается к StateControlFlow</p>",""
"_F-jt-LFgEeuARqq-icHx7Q","BusinessService","ActionRouter","<p>Выполняет маршрутизацию объектов Action от Handlers к ActionProcessors или к SubscriptionService.</p><p>Владеет указателями на ActionProcessor&#39;ы. Если такой процессор не может корректно обработать какой-либо Action, этот Action направляется в SubscriptionService.</p>",""
"_F-juKrFgEeuARqq-icHx7Q","BusinessService","Authenticator","",""
"_F-juKLFgEeuARqq-icHx7Q","BusinessService","Authorizer","",""
"_F-juOLFgEeuARqq-icHx7Q","BusinessService","BankAuthorized","",""
"_F-jtxLFgEeuARqq-icHx7Q","BusinessService","Binary","",""
"_F-jt3rFgEeuARqq-icHx7Q","BusinessService","Binary","",""
"_F-jt1LFgEeuARqq-icHx7Q","BusinessService","BinaryEncoder","",""
"_F-jtyrFgEeuARqq-icHx7Q","BusinessService","BinaryTCP","",""
"_F-jtzLFgEeuARqq-icHx7Q","BusinessService","BinaryUDP","",""
"_F-juMLFgEeuARqq-icHx7Q","BusinessService","Biometric","",""
"_F-juQrFgEeuARqq-icHx7Q","BusinessService","CryptoProvider","",""
"_F-juDLFgEeuARqq-icHx7Q","BusinessService","DataSequence storage","<p>Хранилище объектов DataSequence. Предоставляет два метода:</p><ul> <li>currentDS() -&gt; DataSequence. Возвращает текущий объект DataSequence.</li> <li>historyDS() -&gt; DataSequence[]. Возвращает ранее существовавшие DataSequence объекты.</li></ul><p>В любой момент времени может существовать только один &quot;текущий&quot; DataSequence.</p><p>При удалении DataSequence, storage сохраняет его на время, определяемое:</p><ol> <li>Явным указанием очистить storage от компетентных классов;</li> <li>Конфигурацией DataSequence;</li> <li>Пометками в самом хранимом DataSequence.</li></ol>",""
"_F-juFrFgEeuARqq-icHx7Q","BusinessService","ErrorProcessorsManager","<p>Выполняет маршрутизацию запросов об ошибках различным ErrorProcessor&#39;ам.</p><p>Сам Manager также содержит логику анализа ошибок. ErrorProcessor&#39;ы являются реализациями различных стратегий, однако её выполнение и обработку результата осуществляет сам ErrorProcessorsManager.</p>",""
"_F-juGLFgEeuARqq-icHx7Q","BusinessService","ErrorReporter","<p>Реализует фиксацию отчётов об ошибках</p>",""
"_F-jtwrFgEeuARqq-icHx7Q","BusinessService","HTTP","",""
"_F-jt3LFgEeuARqq-icHx7Q","BusinessService","HTTP","",""
"_F-jtzrFgEeuARqq-icHx7Q","BusinessService","HTTPClient","",""
"_F-jt0rFgEeuARqq-icHx7Q","BusinessService","HTTPEncoder","",""
"_F-jtyLFgEeuARqq-icHx7Q","BusinessService","HTTPS","",""
"_F-jtwLFgEeuARqq-icHx7Q","BusinessService","JSON","",""
"_F-jt2rFgEeuARqq-icHx7Q","BusinessService","JSON","",""
"_F-jt2LFgEeuARqq-icHx7Q","BusinessService","NoneEncoder","",""
"_F-juMrFgEeuARqq-icHx7Q","BusinessService","Password","",""
"_F-juPrFgEeuARqq-icHx7Q","BusinessService","Recovery","",""
"_F-juNrFgEeuARqq-icHx7Q","BusinessService","Registration","",""
"_F-jtsLFgEeuARqq-icHx7Q","BusinessService","RequestManager","<p>Контролирует выполнение отдельного запроса</p>",""
"_F-juHLFgEeuARqq-icHx7Q","BusinessService","ScenarioManager","<p>Менеджер сценариев. В зависимости от поступивших Actions или состояния DataSequence, вызывает тот или иной сценарий из числа ScenarioProcessors.</p>",""
"_F-juNLFgEeuARqq-icHx7Q","BusinessService","SecondFactor","",""
"_F-juRLFgEeuARqq-icHx7Q","BusinessService","SecureConnectionManager","",""
"_F-juALFgEeuARqq-icHx7Q","BusinessService","StateAccessor","",""
"_F-jt8LFgEeuARqq-icHx7Q","BusinessService","SubscriptionService","",""
"_F-jtxrFgEeuARqq-icHx7Q","BusinessService","Text","",""
"_F-jt4LFgEeuARqq-icHx7Q","BusinessService","Text","",""
"_F-jt1rFgEeuARqq-icHx7Q","BusinessService","TextEncoder","",""
"_F-juLLFgEeuARqq-icHx7Q","BusinessService","TransactionManager","",""
"_F-juQLFgEeuARqq-icHx7Q","BusinessService","Usual","",""
"_F-jtkrFgEeuARqq-icHx7Q","ApplicationComponent","Authorizator","",""
"_F-jHYrFgEeuARqq-icHx7Q","ApplicationComponent","BiometricAuthMethod","",""
"_F-jHYLFgEeuARqq-icHx7Q","ApplicationComponent","ClassicAuthMethod","",""
"_F-jtkLFgEeuARqq-icHx7Q","ApplicationComponent","CredentialsRecovery","",""
"_F-jtoLFgEeuARqq-icHx7Q","ApplicationComponent","DocumentsScreen","",""
"_F-jtorFgEeuARqq-icHx7Q","ApplicationComponent","HistoryScreen","",""
"_F-jtqLFgEeuARqq-icHx7Q","ApplicationComponent","LoginScreen","",""
"_F-jtnLFgEeuARqq-icHx7Q","ApplicationComponent","MainScreen","",""
"_F-jtprFgEeuARqq-icHx7Q","ApplicationComponent","MapScreen","",""
"_F-jHXrFgEeuARqq-icHx7Q","ApplicationComponent","NormalAuth","",""
"_F-jtlrFgEeuARqq-icHx7Q","ApplicationComponent","Notifications","",""
"_F-jHZrFgEeuARqq-icHx7Q","ApplicationComponent","Registration","",""
"_F-jtlLFgEeuARqq-icHx7Q","ApplicationComponent","SafeStorage","",""
"_F-jHZLFgEeuARqq-icHx7Q","ApplicationComponent","SecondFactorAuthMethod","",""
"_F-jtnrFgEeuARqq-icHx7Q","ApplicationComponent","SettingsScreen","",""
"_F-jtmLFgEeuARqq-icHx7Q","ApplicationComponent","UserData","",""
"_F-jtmrFgEeuARqq-icHx7Q","ApplicationComponent","Utilities","",""
"_F-jtpLFgEeuARqq-icHx7Q","ApplicationComponent","WebScreen","",""
"_F-juCLFgEeuARqq-icHx7Q","ApplicationInterface","ActionGenerator","<p>Генератор событий. Позволяет внешним компонентам&nbsp;генерировать события для пользовательского интерфейса.</p>",""
"_F-jtqrFgEeuARqq-icHx7Q","ApplicationInterface","Authentication providers","",""
"_F-jt_LFgEeuARqq-icHx7Q","ApplicationInterface","Request","",""
"_F-jt6LFgEeuARqq-icHx7Q","ApplicationInterface","RequestFormer","<p>Формирует запросы заданного вида по данным callers. В формируемых запросах указывается, какой Encoder и Decoder следует использовать для пересылаемых данных.</p>",""
"_F-jtrLFgEeuARqq-icHx7Q","ApplicationInterface","Scenario processors","",""
"_F-jt_rFgEeuARqq-icHx7Q","ApplicationInterface","State","<p>Позволяет внешним компонентам изменять объект State.</p>",""
"_F-jt9rFgEeuARqq-icHx7Q","ApplicationInterface","SubscriptionService","<p>Сервис, состоящий из нескольких SubscriptionService-объектов с одинаковой логикой. Каждый такой объект реализует паттерн Наблюдатель, и позволяет внешним компонентам подписываться на те или иные Action&#39;ы, а также проверять их наличие, в том числе и зафиксированное ранее.</p>",""
"_F-jt9LFgEeuARqq-icHx7Q","ApplicationService","ActionProcessors","",""
"_F-juLrFgEeuARqq-icHx7Q","ApplicationService","Authentication providers","",""
"_F-juPLFgEeuARqq-icHx7Q","ApplicationService","AuthenticationScenarios","",""
"_F-jtrrFgEeuARqq-icHx7Q","ApplicationService","Backend","",""
"_F-jttLFgEeuARqq-icHx7Q","ApplicationService","Decoders","<p>Приводят сериализованную форму ответа в каком-либо виде в единый формат Request</p>",""
"_F-jt-rFgEeuARqq-icHx7Q","ApplicationService","Displayers","",""
"_F-jtsrFgEeuARqq-icHx7Q","ApplicationService","Encoders","<p>Приводят данные Request в какую-либо сериализованную форму</p>",""
"_F-juFLFgEeuARqq-icHx7Q","ApplicationService","ErrorProcessors","",""
"_F-jt7rFgEeuARqq-icHx7Q","ApplicationService","Handlers","",""
"_F-jttrFgEeuARqq-icHx7Q","ApplicationService","Interactors","<p>Отсылают и принимают двоичные данные</p>",""
"_F-jt6rFgEeuARqq-icHx7Q","ApplicationService","Objects","<p>Различные объекты, имеющие визуальное представление.</p>",""
"_F-juHrFgEeuARqq-icHx7Q","ApplicationService","OSInteractors","",""
"_F-jHXLFgEeuARqq-icHx7Q","ApplicationService","Processor","",""
"_F-jt7LFgEeuARqq-icHx7Q","ApplicationService","Provisions","<p>Различные объекты, не имеющие определённого визуального представления.</p>",""
"_F-jHWLFgEeuARqq-icHx7Q","ApplicationService","RequestTemplates","<p>Объекты, преобразующие запрос в виде сырых данных в объект запроса. Каждый объект определяет логику работы запроса (используемый метод, данные, декодер, ...)</p>",""
"_F-juELFgEeuARqq-icHx7Q","ApplicationService","ScenarioProcessors","<p>Процессор сценариев реализует паттерн Стратегия.</p><p>Состояние (данные) каждого сценария хранятся в объекте DataSequence. Правила работы же с этим состояним содержатся в объектах ScenarioProcessors.</p>",""
"_F-juJrFgEeuARqq-icHx7Q","ApplicationService","Security provider","",""
"_F-juErFgEeuARqq-icHx7Q","ApplicationService","StatisticsCollectors","",""
"_F-jHWrFgEeuARqq-icHx7Q","ApplicationService","User interface","",""
"_F-juBrFgEeuARqq-icHx7Q","DataObject","Action","<p>Действие пользователя и его параметры.</p><p>Объект используется большинством компонентов User Interface.</p>",""
"_F-juCrFgEeuARqq-icHx7Q","DataObject","DataSequence","<p>Последовательность данных - объект, хранящий контекст текущей задачи, сценария, действия, выполняемого пользователем или приложением.</p><p>Создание нового объекта происходит по команде различных объектов, которые оперируют DataSequence.</p><p>У этого объекта нет владельца; любой класс, оперирующий DataSequence, должен быть способен корректно обрабатывать основные параметры любого DataSequence. Объект может быть удалён также из любого такого класса.</p><p>При удалении этого объекта, он, как правило, сохраняется в DataSequence storage. Длительность хранения объекта там может регулироватьсяч полями DataSequence.</p>",""
"_F-jt5LFgEeuARqq-icHx7Q","DataObject","Request","<p>Объект, хранящий состояние данного запроса.</p><p>В состояние входит, кроме прочего:</p><ul> <li>Оригинальный запрос (Object[])</li> <li>Служебные поля запроса</li> <li>Сериализованный запрос</li> <li>Сериализованный ответ</li> <li>Готовый ответ</li> <li>Future для получения готового ответа и проверки состояния запроса</li></ul><p>С точки зрения внешних объектов, Request&nbsp;<em>может быть</em>&nbsp;реализацией Future.</p>",""
"_F-juRrFgEeuARqq-icHx7Q","DataObject","Secure storage","",""
"_F-jt4rFgEeuARqq-icHx7Q","CommunicationNetwork","Bank backend","",""
"_F-juJLFgEeuARqq-icHx7Q","Device","Device capabilities","",""
"_F-juSrFgEeuARqq-icHx7Q","Device","Device cryptography","",""
"_F-juSLFgEeuARqq-icHx7Q","Device","Device storage","",""
"_F-juArFgEeuARqq-icHx7Q","Device","Input capabilities","",""
"_F-juBLFgEeuARqq-icHx7Q","Device","Output capabilities","",""
"_F-jt5rFgEeuARqq-icHx7Q","Path","Queue","",""
"_F-juILFgEeuARqq-icHx7Q","Path","Queue","",""
"_F-juIrFgEeuARqq-icHx7Q","Path","Queue","",""
"_F-jt8rFgEeuARqq-icHx7Q","Path","Queues","",""