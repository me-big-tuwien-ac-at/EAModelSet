"ID","Type","Name","Documentation","Specialization"
"id-157c8a6adcaf400cbdb33b1c67b786ce","ArchimateModel","k8s","",""
"id-61e3eacd60b44e84b054a92f75097e52","BusinessActor","External Software","",""
"id-6278e38e467048bf8e091fbd14e27a47","BusinessActor","User","",""
"id-bb97e03081c64871af2be833cb5f21cf","BusinessProcess","Send Pod Request","",""
"id-45b431b3025846c293b63a686e469d87","ApplicationComponent","controllermanager.go","https://github.com/kubernetes/kubernetes/blob/7c75723867e9e431da323b8cc410bab928cada17/cmd/kube-controller-manager/app/controllermanager.go",""
"id-c0eb94359c784a92a5e2245772347fca","ApplicationComponent","namespace","https://kubernetes.io/docs/concepts/workloads/pods/
https://github.com/kubernetes/kubernetes/blob/7c75723867e9e431da323b8cc410bab928cada17/cmd/kube-controller-manager/app/controllermanager.go#L330",""
"id-ef9a24639a554603b0fa592b81aeb8a6","ApplicationFunction","Requests Validattion","",""
"id-12a64d2416c149b2827f0121dc14e334","ApplicationInterface","HTTP API","",""
"id-ee9edc4769764e7cbf63771c853ab844","ApplicationService","CRUD + watch","https://kubernetes.io/docs/reference/using-api/api-concepts/
https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",""
"id-390765d370374879b0dac465a1088181","Artifact","binarydata","",""
"id-3fe0cc71d2ec441ab1f71f553245d3e5","Artifact","Binding","https://gist.github.com/kelseyhightower/2349c9c645d32a3fcbe385082de74668
https://dominik-tornow.medium.com/what-the-hell-is-a-pod-anyways-72e5534b892c",""
"id-0dc2654de3be40df9809f5c1754fa94a","Artifact","ConfigMap","https://kubernetes.io/docs/concepts/configuration/configmap/
https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.21/#configmap-v1-core",""
"id-b49b787ac710444a80e1237501775d36","Artifact","Container Image","",""
"id-09a4ac7bebfa4f3d9c26afef1321b39d","Artifact","Controlled Object","",""
"id-3f25872b77a24d2d9be5b8dbd265a3fd","Artifact","data","",""
"id-7b452eb1db374de494124e7378a8d56e","Artifact","Deployment","https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
Deployment is an object which can own ReplicaSets and update them and their Pods via declarative, server-side rolling updates. While ReplicaSets can be used independently, today they're mainly used by Deployments as a mechanism to orchestrate Pod creation, deletion and updates. When you use Deployments you don't have to worry about managing the ReplicaSets that they create. Deployments own and manage their ReplicaSets. As such, it is recommended to use Deployments when you want ReplicaSets",""
"id-642a6d937669438dafc61d5255be7661","Artifact","K8s Object","https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#objects
https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.21
",""
"id-b696d4d3e0ee47b8917873780feee788","Artifact","K8s Resource","https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.21
https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",""
"id-3593d9ec09f24283a231041cae306dbf","Artifact","kind","",""
"id-4d0df77f4241484a945626d06d95337d","Artifact","metadata","https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.21/#objectmeta-v1-meta",""
"id-06da6fe7247545e2aca65feedc5858ce","Artifact","name","",""
"id-a228c496d6fd43e68b91a7977ea976b7","Artifact","namespace","https://kubernetes.io/docs/tasks/administer-cluster/namespaces-walkthrough/",""
"id-b06fffa6df664f58998ce17dfc68a4a1","Artifact","Pod","https://dominik-tornow.medium.com/what-the-hell-is-a-pod-anyways-72e5534b892c
- !!! A Pod represents a request to execute one or more containers on the same node

https://cloud.google.com/kubernetes-engine/docs/concepts/pod
- Pods are the smallest, most basic deployable objects in Kubernetes. A Pod represents a single instance of a running process in your cluster.

[Creating and Scheduling a Pod Manually](https://gist.github.com/kelseyhightower/2349c9c645d32a3fcbe385082de74668)
!!! This guide assumes you don't have a scheduler running in your Kubernetes cluster.
- ""kind"":""Pod""
- ""kind"":""Binding""

",""
"id-ab82540482754f1db51a72d5c56eb3ad","Artifact","ReplicaSet","https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
- To update Pods to a new spec in a controlled way, use a Deployment, as ReplicaSets do not support a rolling update directly
- A ReplicaSet is linked to its Pods via the Pods' metadata.ownerReferences field",""
"id-94443804ff094e61b1e0a7dfbc00b1c5","Artifact","spec","",""
"id-478dc503357d47f286ed2fdb793b5733","Artifact","status","",""
"id-0ea2e29e04fb4abe93d4377cdd3ba9a4","Artifact","uid","",""
"id-57ee03511c77418d9a07234d0c32ace2","Device","Control Plane Node","https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/create-cluster-kubeadm/

https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/
Control-plane node(s)

kubeadm join 192.168.0.200:6443 --token 9vr73a.a8uxyaju799qwdjv --discovery-token-ca-cert-hash sha256:7c2e69131a36ae2a042a339b33381c6d0d43887e2de83720eff5359e26aec866 --control-plane --certificate-key f8902e114ef118304e561c3ecd4d0b543adc226b7a07f675f56564185ffe0c07",""
"id-27c6dc149a0e4790a3328a943b94e6ad","Device","Generic K8s Node","https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/#control-plane-node-s
You will install these packages on all of your machines:
- kubeadm: the command to bootstrap the cluster.
- kubelet: the component that runs on all of the machines in your cluster and does things like starting pods and containers.
- kubectl: the command line util to talk to your cluster

https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/#installing-runtime",""
"id-13f9b72c71b54117a4cfd024c543e6a8","Device","Host","",""
"id-dacb0a4fa27947b0986e2963ebbe49af","Device","Worker Node","",""
"id-16932e81945948019984c665f9c7fa1e","Material","770 px","",""
"id-ed9d55765b7447a5a4ca8b08904ce153","Node","Container","https://docs.docker.com/get-started/overview/
- A container is a runnable instance of an image. ",""
"id-8192901eb9c74076b33d4021992ac69d","Node","Controller","https://kubernetes.io/docs/concepts/workloads/pods/
https://github.com/kubernetes/kubernetes/blob/7c75723867e9e431da323b8cc410bab928cada17/cmd/kube-controller-manager/app/controllermanager.go#L330",""
"id-9003526e6ce241edb0c4c81ae1713694","Node","Controller","",""
"id-de9f5211db4e4d978d687b7b0460ba77","Node","deployment","",""
"id-fa249d702c724766a08c8bb0aff88fda","Node","pod","https://kubernetes.io/docs/concepts/cluster-administration/networking/
- This creates a clean, backwards-compatible model where Pods can be treated much like VMs or physical hosts from the perspectives of port allocation, naming, service discovery, load balancing, application configuration, and migration.

https://kubernetes.io/docs/concepts/workloads/pods/
- A Pod (as in a pod of whales or pea pod) is a group of one or more containers, with shared storage and network resources, and a specification for how to run the containers. 
- !!! A Pod models an application-specific ""logical host"": it contains one or more application containers which are relatively tightly coupled
- In non-cloud contexts, applications executed on the same physical or virtual machine are analogous to cloud applications executed on the same logical host.
- ...Pods that run a single container...

https://kubernetes.io/docs/concepts/workloads/
- A workload is an application running on Kubernetes. Whether your workload is a single component or several that work together, on Kubernetes you run it inside a set of pods
- In Kubernetes, a Pod represents a set of running containers on your cluster.
 

https://docs.microsoft.com/ru-ru/learn/modules/intro-to-kubernetes/3-how-kubernetes-works
- Модуль pod представляет отдельный экземпляр приложения, работающего в Kubernetes
- Рабочие нагрузки, выполняемые в Kubernetes, являются контейнерными приложениями
- В отличие от среды Docker вы не можете запускать контейнеры непосредственно в Kubernetes
- Контейнер упаковывается в объект Kubernetes, который называется pod
- Модуль pod является наименьшим объектом, который можно создать в Kubernetes

",""
"id-4ebff5a8a6934881ba57188c8a7561b9","Node","replicaset","",""
"id-423cc92eeae3499ca9836a67e2f9362b","SystemSoftware","cloud-controller-manager","",""
"id-3788c905ca0540e6986a7e2d6d367938","SystemSoftware","Container Runtime","https://kubernetes.io/docs/reference/command-line-tools-reference/kube-proxy/

The Kubernetes network proxy runs on each node. This reflects services as defined in the Kubernetes API on each node and can do simple TCP, UDP, and SCTP stream forwarding or round robin TCP, UDP, and SCTP forwarding across a set of backends.",""
"id-e8c6360a1c3a46e992f1cb8c0394331c","SystemSoftware","containerd","https://kubernetes.io/docs/reference/command-line-tools-reference/kube-proxy/

The Kubernetes network proxy runs on each node. This reflects services as defined in the Kubernetes API on each node and can do simple TCP, UDP, and SCTP stream forwarding or round robin TCP, UDP, and SCTP forwarding across a set of backends.",""
"id-7f845eb15046442bbda9ff9fc4eef47c","SystemSoftware","CRI-O","https://kubernetes.io/docs/reference/command-line-tools-reference/kube-proxy/

The Kubernetes network proxy runs on each node. This reflects services as defined in the Kubernetes API on each node and can do simple TCP, UDP, and SCTP stream forwarding or round robin TCP, UDP, and SCTP forwarding across a set of backends.",""
"id-a011a84681874b988fcd798ce60d3f01","SystemSoftware","Docker","https://kubernetes.io/docs/reference/command-line-tools-reference/kube-proxy/

The Kubernetes network proxy runs on each node. This reflects services as defined in the Kubernetes API on each node and can do simple TCP, UDP, and SCTP stream forwarding or round robin TCP, UDP, and SCTP forwarding across a set of backends.",""
"id-45ed6b22a648424480e8042b8866033f","SystemSoftware","etcd","https://habr.com/ru/company/southbridge/blog/439562/
Документация на Kubeadm предлагает два основных способа реализации кластера, со стековой и внешней etcd-топологией. Я выберу второй путь с внешними etcd нодами по причине отказоустойчивости НА-кластера.",""
"id-2e87dfaca7804cd6a3944187865de51f","SystemSoftware","kube-apiserver","https://kubernetes.io/docs/reference/command-line-tools-reference/kube-apiserver/

The Kubernetes API server validates and configures data for the api objects which include pods, services, replicationcontrollers, and others. The API Server services REST operations and provides the frontend to the cluster's shared state through which all other components interact.

https://kubernetes.io/docs/reference/using-api/api-concepts/",""
"id-d1454d30a18c450bbb00af2e52cfd5a0","SystemSoftware","kube-controller-manager","https://kubernetes.io/docs/reference/command-line-tools-reference/kube-apiserver/

The Kubernetes API server validates and configures data for the api objects which include pods, services, replicationcontrollers, and others. The API Server services REST operations and provides the frontend to the cluster's shared state through which all other components interact.",""
"id-59726a61c52e465896fe2958076557c6","SystemSoftware","kube-proxy","https://kubernetes.io/docs/reference/command-line-tools-reference/kube-proxy/

The Kubernetes network proxy runs on each node. This reflects services as defined in the Kubernetes API on each node and can do simple TCP, UDP, and SCTP stream forwarding or round robin TCP, UDP, and SCTP forwarding across a set of backends.",""
"id-14a9594db1ef42de8d31d2b47879765f","SystemSoftware","kube-scheduler","",""
"id-6b4f9b6649a449818db7fc271e77e8be","SystemSoftware","kubeadm","",""
"id-569455231a2e40f589aea6f02e1209e9","SystemSoftware","kubectl","",""
"id-efc57b9ca6604ba181142ee57a4f2556","SystemSoftware","kubelet","https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet

The kubelet is the primary ""node agent"" that runs on each node.",""
"id-45034bbc39374885afd47e9d0f8c3f67","SystemSoftware","Network Add-On","https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/network-plugins/
Network plugins in Kubernetes come in a few flavors:

CNI plugins: adhere to the Container Network Interface (CNI) specification, designed for interoperability.
Kubernetes follows the v0.4.0 release of the CNI specification.
Kubenet plugin: implements basic cbr0 using the bridge and host-local CNI plugins",""
"id-d7772506f5d6403882c33b629a0b8b4a","SystemSoftware","weave-net","https://kubernetes.io/docs/reference/command-line-tools-reference/kube-proxy/

The Kubernetes network proxy runs on each node. This reflects services as defined in the Kubernetes API on each node and can do simple TCP, UDP, and SCTP stream forwarding or round robin TCP, UDP, and SCTP forwarding across a set of backends.",""
"id-e1d2270b8f834764a70acf7dbb50d26c","TechnologyCollaboration","Control Plane","",""
"id-3ba23fd190c04aeeb0604c0aa94e3805","TechnologyCollaboration","Execution Plane","",""
"id-2658fc71288143a2b8145f667c3efd89","TechnologyCollaboration","External etcd Cluster","",""
"id-da5ad05e1911431bbed49773c706fd20","TechnologyCollaboration","Internal etcd Cluster","",""
"id-441f9f9b976940868e4c0e26b41a9485","TechnologyCollaboration","Kubernetes Cluster","",""
"id-d780bc8094c746b78dde8ed6c3e5b774","TechnologyCollaboration","Persistent Store","",""
"id-d39bcb0111bc483ea3a4b0aee175cd5a","TechnologyCollaboration","Worker Nodes","",""
"id-f1665ae51516455290d12d0bdc2217d6","TechnologyEvent","Binding resource version changed","",""
"id-a0b0ac58f8224882b5765abeba67788d","TechnologyEvent","Pod resource version changed","",""
"id-67ce21b197864b8a987b22b776b98b9c","TechnologyFunction","","",""
"id-96058c8dea0748049eed2682e35e0774","TechnologyFunction","Hosting Pods","",""
"id-cf03df8f4f2a425d826d45e36d8d2ab4","TechnologyFunction","pods Communication","",""
"id-bc4a9106d76c421a85a593a3cbdb20da","TechnologyFunction","Run Containers","",""
"id-95576d3d6fac431b9e6b7c0d6742b00e","TechnologyFunction","Technology Function","",""
"id-5ccf85cf868f426ca5c6e61d21ff9edf","TechnologyProcess","Actualize Pod Bindings","",""
"id-d0149369f25145708dd6877f9000221c","TechnologyProcess","Bind Pod","",""
"id-1cf41bc88f3c4da1ba108ebdc0ce9089","TechnologyProcess","Control Loop","",""
"id-657dbb72d6e44e699b6e21345e916d62","TechnologyProcess","Control loop","",""
"id-161cbbee155a40cab1ba40543c5564b7","TechnologyProcess","Get Pod Bindings","",""
"id-0111f956f2f4455c8a1dd9786de4326a","TechnologyProcess","Operation","",""
"id-1d684ccf2199456baa4d4f2975e306bc","TechnologyProcess","Report Node/Pad Statuses","",""
"id-6fbd8e1af1ef448ca9e6c40d3efae962","TechnologyProcess","Run Containers","",""
"id-140fc498620844be9db81e0822c0de3e","TechnologyProcess","Save Binding","",""
"id-32b04e3ce3154defba7f064f57c8393e","TechnologyProcess","Start Pod","",""
"id-081a3afea71e4c7c8ac72a84c1c9637f","TechnologyProcess","SubjectAccessReview","https://kubernetes.io/docs/reference/using-api/api-concepts/
",""
"id-3e20ea20c81b4fcb9bf5c6114a1c32aa","TechnologyProcess","Technology Process","",""
"id-106bdab1ae2d4bab891fbbfed8c4665a","TechnologyProcess","Update Pod status","",""
"id-63a5e67a79ab4c079db2412fbd6c9217","TechnologyProcess","Validate & process Pod request","",""
"id-437cbb8287584894b406c239de3b7a47","TechnologyService","Maintain a stable set of replica pods","",""
"id-074425a36487468ea0b7321e048a1f79","TechnologyService","Rolling update","",""
"id-abea1fb313074c98ae563ddd996d9851","TechnologyService","Technology Service","",""
"id-99c36f92306f405c8bc41b89e8269e73","Constraint","Primary Key","",""
"id-c7a48bfdb29348a797b8f8db90628529","Constraint","UUID","",""
"id-31eaf3fb09034a048d4efaf4e2d33873","Principle","hub-and-spoke","Control and Execution plane components do not connect to each others, instead they works through kube-apiserver",""
"id-032923942deb4d3681b66af5af0cae13","Grouping","Control Plane Components","",""
"id-6620864d305a4041a0e798a9490cca10","Grouping","Core control loops","",""
"id-0e69088ee12147f183f63de1ed09d7df","Grouping","Execution Plane Components","",""
"id-d35b0ca9ee674328a2242f744e2513b4","Grouping","OR","",""
"id-d31913001fdc4a988bc5fd68e54bd735","Grouping","Pod Mgmt","",""
"id-9074ad7b12cc4c26ae01ac90fa87c8ff","Grouping","Virtual Resource","https://kubernetes.io/docs/reference/using-api/api-concepts/",""